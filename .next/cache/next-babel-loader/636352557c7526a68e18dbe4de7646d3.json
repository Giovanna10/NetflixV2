{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/giovannaradica/Desktop/Projects/NetflixV2/context/LocaleContext.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { isLocale } from '../translations/types';\nexport var LocaleContext = React.createContext({\n  locale: 'it',\n  setLocale: function setLocale() {\n    return null;\n  }\n});\nexport var LocaleProvider = function LocaleProvider(_ref) {\n  var lang = _ref.lang,\n      children = _ref.children;\n\n  var _React$useState = React.useState(lang),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      locale = _React$useState2[0],\n      setLocale = _React$useState2[1];\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  React.useEffect(function () {\n    if (locale !== localStorage.getItem('locale')) {\n      localStorage.setItem('locale', locale);\n    }\n  }, [locale]);\n  React.useEffect(function () {\n    if (typeof query.lang === 'string' && isLocale(query.lang) && locale !== query.lang) {\n      setLocale(query.lang);\n    }\n  }, [query.lang, locale]);\n  return __jsx(LocaleContext.Provider, {\n    value: {\n      locale: locale,\n      setLocale: setLocale\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/giovannaradica/Desktop/Projects/NetflixV2/context/LocaleContext.tsx"],"names":["React","useRouter","isLocale","LocaleContext","createContext","locale","setLocale","LocaleProvider","lang","children","useState","query","useEffect","localStorage","getItem","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAiBC,QAAjB,QAAiC,uBAAjC;AAOA,OAAO,IAAMC,aAAa,GAAGH,KAAK,CAACI,aAAN,CAAkC;AAC7DC,EAAAA,MAAM,EAAE,IADqD;AAE7DC,EAAAA,SAAS,EAAE;AAAA,WAAM,IAAN;AAAA;AAFkD,CAAlC,CAAtB;AAKP,OAAO,IAAMC,cAA0C,GAAG,SAA7CA,cAA6C,OAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,wBACpDT,KAAK,CAACU,QAAN,CAAeF,IAAf,CADoD;AAAA;AAAA,MACzEH,MADyE;AAAA,MACjEC,SADiE;;AAAA,mBAE9DL,SAAS,EAFqD;AAAA,MAExEU,KAFwE,cAExEA,KAFwE;;AAIhFX,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AACpB,QAAIP,MAAM,KAAKQ,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf,EAA+C;AAC7CD,MAAAA,YAAY,CAACE,OAAb,CAAqB,QAArB,EAA+BV,MAA/B;AACD;AACF,GAJD,EAIG,CAACA,MAAD,CAJH;AAMAL,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AACpB,QAAI,OAAOD,KAAK,CAACH,IAAb,KAAsB,QAAtB,IAAkCN,QAAQ,CAACS,KAAK,CAACH,IAAP,CAA1C,IAA0DH,MAAM,KAAKM,KAAK,CAACH,IAA/E,EAAqF;AACnFF,MAAAA,SAAS,CAACK,KAAK,CAACH,IAAP,CAAT;AACD;AACF,GAJD,EAIG,CAACG,KAAK,CAACH,IAAP,EAAaH,MAAb,CAJH;AAMA,SAAO,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,SAAS,EAATA;AAAV,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuDG,QAAvD,CAAP;AACD,CAjBM","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\nimport { Locale, isLocale } from '../translations/types'\n\ninterface ContextProps {\n  readonly locale: Locale\n  readonly setLocale: (locale: Locale) => void\n}\n\nexport const LocaleContext = React.createContext<ContextProps>({\n  locale: 'it',\n  setLocale: () => null\n})\n\nexport const LocaleProvider: React.FC<{ lang: Locale }> = ({ lang, children }) => {\n  const [locale, setLocale] = React.useState(lang)\n  const { query } = useRouter()\n\n  React.useEffect(() => {\n    if (locale !== localStorage.getItem('locale')) {\n      localStorage.setItem('locale', locale)\n    }\n  }, [locale])\n\n  React.useEffect(() => {\n    if (typeof query.lang === 'string' && isLocale(query.lang) && locale !== query.lang) {\n      setLocale(query.lang)\n    }\n  }, [query.lang, locale])\n\n  return <LocaleContext.Provider value={{ locale, setLocale }}>{children}</LocaleContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}