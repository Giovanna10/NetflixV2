{"ast":null,"code":"var _jsxFileName = \"/Users/giovannaradica/Desktop/Projects/NetflixV2/components/LocaleSwitcher.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { locales, languageNames } from '../translations/config';\nimport { LocaleContext } from '../context/LocaleContext';\n\nconst LocaleSwitcher = () => {\n  const router = useRouter();\n  const {\n    locale\n  } = React.useContext(LocaleContext);\n  const handleLocaleChange = React.useCallback(e => {\n    const regex = new RegExp(`^/(${locales.join('|')})`);\n    router.push(router.pathname, router.asPath.replace(regex, `/${e.target.value}`));\n  }, [router]);\n  return __jsx(\"select\", {\n    value: locale,\n    onChange: handleLocaleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, locales.map(locale => __jsx(\"option\", {\n    key: locale,\n    value: locale,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, languageNames[locale])));\n};\n\nexport default LocaleSwitcher;","map":{"version":3,"sources":["/Users/giovannaradica/Desktop/Projects/NetflixV2/components/LocaleSwitcher.tsx"],"names":["React","useRouter","locales","languageNames","LocaleContext","LocaleSwitcher","router","locale","useContext","handleLocaleChange","useCallback","e","regex","RegExp","join","push","pathname","asPath","replace","target","value","map"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,wBAAvC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,MAAMC,cAAwB,GAAG,MAAM;AACrC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAaP,KAAK,CAACQ,UAAN,CAAiBJ,aAAjB,CAAnB;AAEA,QAAMK,kBAAkB,GAAGT,KAAK,CAACU,WAAN,CACxBC,CAAD,IAA6C;AAC3C,UAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,MAAKX,OAAO,CAACY,IAAR,CAAa,GAAb,CAAkB,GAAnC,CAAd;AACAR,IAAAA,MAAM,CAACS,IAAP,CAAYT,MAAM,CAACU,QAAnB,EAA6BV,MAAM,CAACW,MAAP,CAAcC,OAAd,CAAsBN,KAAtB,EAA8B,IAAGD,CAAC,CAACQ,MAAF,CAASC,KAAM,EAAhD,CAA7B;AACD,GAJwB,EAKzB,CAACd,MAAD,CALyB,CAA3B;AAQA,SACE;AAAQ,IAAA,KAAK,EAAEC,MAAf;AAAuB,IAAA,QAAQ,EAAEE,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OAAO,CAACmB,GAAR,CAAYd,MAAM,IACjB;AAAQ,IAAA,GAAG,EAAEA,MAAb;AAAqB,IAAA,KAAK,EAAEA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,aAAa,CAACI,MAAD,CADhB,CADD,CADH,CADF;AASD,CArBD;;AAuBA,eAAeF,cAAf","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\nimport { locales, languageNames } from '../translations/config'\nimport { LocaleContext } from '../context/LocaleContext'\n\nconst LocaleSwitcher: React.FC = () => {\n  const router = useRouter()\n  const { locale } = React.useContext(LocaleContext)\n\n  const handleLocaleChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      const regex = new RegExp(`^/(${locales.join('|')})`)\n      router.push(router.pathname, router.asPath.replace(regex, `/${e.target.value}`))\n    },\n    [router]\n  )\n\n  return (\n    <select value={locale} onChange={handleLocaleChange}>\n      {locales.map(locale => (\n        <option key={locale} value={locale}>\n          {languageNames[locale]}\n        </option>\n      ))}\n    </select>\n  )\n}\n\nexport default LocaleSwitcher\n"]},"metadata":{},"sourceType":"module"}